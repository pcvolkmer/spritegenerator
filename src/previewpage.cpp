/***************************************************************************
 *   Copyright (C) 2010  Paul-Christian Volkmer
 *   paul-christian.volkmer@mni.fh-giessen.de
 *
 *   This file is part of SpriteGenerator.
 *
 *   SpriteGenerator is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   SpriteGenerator is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with SpriteGenerator.  If not, see <http://www.gnu.org/licenses/>.
 ***************************************************************************/

#include "previewpage.h"

QByteArray PreviewPage::create(QList<CssSpriteElementImage> images) {
    QString * puffer = new QString();
    QTextStream out(puffer);
    out << "<!DOCTYPE html>\n";
    out << "<html lang=\"de-DE\">\n<head>\n<meta charset=\"UTF-8\"/>\n<title>Preview</title>\n<style type=\"text/css\">\n";
    out << "body { margin: 24px; background-color: #DDD; font-family: sans-serif; }\n";
    out << "b { margin: 8px; display: block; }\n";
    out << ".style { border: 1px solid gray; background-color: #FFF; color: #333; margin: 2px; padding: 8px; ";
    out << "-moz-border-radius: 8px; -webkit-border-radius: 8px; }\n";
    out << ".style:hover { background-color: #FFC; ";
    out << "-moz-box-shadow:0 0 2px gray; -webkit-box-shadow:0 0 2px gray; }\n";
    foreach (CssSpriteElementImage elem, images) {
        out << ".style_" << QCryptographicHash::hash(
            elem.fileName().toUtf8(),
            QCryptographicHash::Md5
        ).toHex() << " {";
        out << " background: url(sprite.png) no-repeat; ";
        out << "background-position: -" << elem.description()->startPosition().x() << "px -";
        out << elem.description()->startPosition().y() << "px; ";
        out << "width: " << elem.description()->size().width() << "px; ";
        out << "height: " << elem.description()->size().height() << "px; ";
        out << "}\n";
    }
    out << "</style>\n</head>\n";
    out << "<body>\n";
    QString versionText = "SpriteGenerator "
                          + QString::number ( VERSION_MAJOR,10 )
                          + "." + QString::number ( VERSION_MINOR,10 )
                          + "." + QString::number ( VERSION_RELEASE,10 );
    out << "<b>" << "This is a preview for a css sprite generated by " << versionText << "</b>\n";
    foreach (CssSpriteElementImage elem, images) {
        out << "<div class=\"style\"\n>";
        out << "<div class=\"style_" << QCryptographicHash::hash(elem.fileName().toUtf8(),QCryptographicHash::Md5).toHex() << "\">";
        out << "</div>\n";
        out << "<pre>\n";
        out << ".style_" << QCryptographicHash::hash(
            elem.fileName().toUtf8(),
            QCryptographicHash::Md5
        ).toHex() << " {\n";
        out << "  background: url(sprite.png) no-repeat;\n";
        out << "  background-position: -" << elem.description()->startPosition().x() << "px -";
        out << elem.description()->startPosition().y() << "px;\n";
        out << "  width: " << elem.description()->size().width() << "px;\n";
        out << "  height: " << elem.description()->size().height() << "px;\n";
        out << "}\n";
        out << "</pre>\n";
        out << "</div>\n";
    }
    out << "</body>\n";
    out << "</html>";

    QByteArray result = out.string()->toUtf8();
    delete puffer;
    return result;
}