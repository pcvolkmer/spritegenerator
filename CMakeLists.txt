project(spritegenerator)
cmake_minimum_required(VERSION 2.6)

set(QT_MIN_VERSION 4.6.0)
find_package(Qt4 REQUIRED)

set(VERSION_MAJOR 0)
set(VERSION_MINOR 1)
set(VERSION_RELEASE 20110806)

set(EXECUTABLE_OUTPUT_PATH
  ${CMAKE_CURRENT_BINARY_DIR}/bin
)

CONFIGURE_FILE( version.h.cmake src/version.h )
CONFIGURE_FILE( Doxyfile.cmake Doxyfile )

SET(DESKTOP
  spritegenerator.desktop
)

SET(FILES
  src/resources/images/spritegenerator.svg
)

add_subdirectory(src)

if(TESTS)
  message ("Build of tests is enabled")
  enable_testing()
  add_subdirectory(tests)
else(TESTS)
  message ("To enable build of tests use param '-DTESTS=ON'")
endif(TESTS)

IF (UNIX AND NOT APPLE)
  INSTALL(FILES ${DESKTOP}
    DESTINATION share/applications
  )
  INSTALL(FILES ${FILES}
    DESTINATION share/spritegenerator
  )
ENDIF (UNIX AND NOT APPLE)

IF (APPLE)
  INSTALL(FILES ${FILES}
    DESTINATION ../../../
  )
ENDIF (APPLE)

IF (WIN32)
  INSTALL(FILES ${FILES}
    DESTINATION .
  )
  SET(WINQTFILES
    # This part should contain DLL files to be included in package e.g.:
    ${CMAKE_CURRENT_BINARY_DIR}/lib/libgcc_s_sjlj-1.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/libstdc++-6.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/QtCore4.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/QtGui4.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/QtSvg4.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/QtXml4.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/libjpeg-8.dll 
    ${CMAKE_CURRENT_BINARY_DIR}/lib/libpng15-15.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/libtiff-3.dll
    ${CMAKE_CURRENT_BINARY_DIR}/lib/zlib1.dll
  )
  INSTALL(FILES ${WINQTFILES}
    DESTINATION .
  )
ENDIF (WIN32)

# CPACK
INCLUDE(InstallRequiredSystemLibraries)
SET(CPACK_RESOURCE_FILE_LICENSE "COPYING")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "SpriteGenerator is a simple generator for CSS sprites.")
SET(CPACK_PACKAGE_VENDOR "Paul-Christian Volkmer <paul-christian.volkmer@mni.thm.de>")
SET(CPACK_PACKAGE_CONTACT "Paul-Christian Volkmer <paul-christian.volkmer@mni.thm.de>")
SET(CPACK_PACKAGE_VERSION_MAJOR ${VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${VERSION_RELEASE})
IF (UNIX AND NOT APPLE)
  SET(CPACK_GENERATOR  "RPM")
  SET(CPACK_SYSTEM_NAME "i586")
  SET(CPACK_RPM_PACKAGE_RELEASE "1")
  SET(CPACK_RPM_PACKAGE_LICENSE "GPLv3")
  SET(
    CPACK_RPM_PACKAGE_DESCRIPTION
    "SpriteGenerator generates a css sprite out of several images and shows css needed to use the sprite image. Several options can be used to customize sprite generation like sprite orientation and color depth from 32 bit RGBA to 8 bit indexed color."
  )
  #SET(CPACK_RPM_CHANGELOG_FILE ${CMAKE_CURRENT_BINARY_DIR}/CHANGES)
  SET(CPACK_STRIP_FILES  ${CMAKE_CURRENT_BINARY_DIR}/bin/spritegenerator)
ENDIF (UNIX AND NOT APPLE)
IF (WIN32)
  SET(CPACK_GENERATOR  "NSIS")
  SET(CPACK_SYSTEM_NAME "win32")
  SET(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_CURRENT_BINARY_DIR}/COPYING)
  SET(CPACK_NSIS_MODIFY_PATH ON)
  SET(CPACK_NSIS_PACKAGE_NAME "SpriteGenerator")
  SET(CPACK_NSIS_DISPLAY_NAME "SpriteGenerator")
  SET(CPACK_NSIS_CONTACT "${CPACK_PACKAGE_VENDOR}")
  SET(CPACK_PACKAGE_EXECUTABLES  ..\\\\spritegenerator;SpriteGenerator)
  SET(CPACK_CREATE_DESKTOP_LINKS ..\\\\spritegenerator)
  SET(CPACK_PACKAGE_INSTALL_DIRECTORY spritegenerator)
  SET(CPACK_STRIP_FILES  ${CMAKE_CURRENT_BINARY_DIR}/bin/spritegenerator.exe)
ENDIF (WIN32)
IF (APPLE)
  SET(CPACK_GENERATOR  "Bundle")
  SET(CPACK_BUNDLE_NAME "spritegenerator")
  SET(CPACK_BUNDLE_PLIST ${CMAKE_CURRENT_BINARY_DIR}/Info.plist)
  SET(CPACK_BUNDLE_ICON ${CMAKE_CURRENT_BINARY_DIR}/src/resources/images/spritegenerator.icns)
ENDIF (APPLE)
INCLUDE(CPack)

